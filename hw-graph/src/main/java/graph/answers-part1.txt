## CSE 331 hw-graph Part 1 Questions

## Section 1
###########################################################################

1. Write an AF and RI for IntQueue1 and IntQueue2.

    ### IntQueue1

    Abstraction Function:
    The element at front of the queue ==  entries.get(0)
    the second element of the queue == entries.get(1)
    ...
    the last element of the queue == entries.get(entries.size()-1)



    Representation Invariant:
    entries never contains a null value.




    ### IntQueue2

    Abstraction Function:
     The element at front of the queue ==  entries[front]
     the second element of the queue ==   entries[front + 1 % entries.length]
     ...
     the last element of the queue == entries[front + size -1 % entries.length]



    Representation Invariant:
     0 <= front < entries.length
     0 <= size <= entries.length
     (entries never contains a null value) it actually can




2. Group the snapshots of IntQueue2's internal state into groups that have the same abstract state.
    // <=> means is equivalent to
    a <=> d <=> g
    c <=> f
    b <=> h
    e is not equivalent to any other group




3. For each signature below, state and justify in 1-2 sentences (per part) whether the method or constructor
could possibly expose the representation, given the information available. Explain any assumptions you made.

    a. `public int solveEquations(int x, int y, int z)`
        This method could not possibly expose the representation as it is not dealing with any mutable
        objects.(Assuming that no other fields in the class are being mutated)


    b. `public String[] decode(boolean slowly)`
        This method could possibly expose the representation if the String[] which is checked in the representation
        invariant as arrays are mutable.


    c. `private Date myBirthday()`
        This method could possibly expose the representation if the Date which is returned is
        mutable,is checked in the representation invariant, and is returned to the client in the public method
        where the private method is called of the class.

    d. `public String toString()`
        This method could not possibly expose the representation as it is not dealing with any mutable
        objects.


    e. `public Iterator<Integer> elements()`
        This method could possibly expose the representation if the Iterator<Integer> which is returned is
        mutable and it is checked in the representation invariant of the class.


    f. `public Deck(List<Card> cards)`
        This method could possibly expose the representation if the Deck which is returned is
        mutable and it is checked int  the representation invariant of the class.
        (Assuming that no other fields in the class are being mutated)




## Section 2
###########################################################################

Briefly explain why you included the operations you did and why you feel they are a sufficient
interface to a graph. If your design includes multiple classes or interfaces, explain why you
included each one; if not, explain whether you considered additional classes and why you decided
not to include them.




## Section 3
###########################################################################

What was your testing strategy for this assignment? How do your script tests and JUnit tests
differ from each other (if they do), and why?



